# This file contains common pin mappings for the BIGTREETECH SKR
# MINI 2.0. To use this config, the firmware should be compiled for 
# the STM32F103 with a "28KiB bootloader". Also select "enable extra 
# low-level configuration options" and configure "GPIO pins to set 
# at micro-controller startup" to "!PA14".

# The "make flash" command does not work on the SKR mini. Instead,
# after running "make", copy the generated "out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the SKR
# mini with that SD card.

## Voron Design VORON 0.1 SKR Mini E3 V2 config

## *** THINGS TO CHANGE/CHECK: ***
## MCU path                                                                     [mcu] section
## Z and Extruder motor currents                                                [tmc2209 stepper_*] sections. Uncomment the stepper motor you have
## Full steps per rotation for Extruder                                         [extruder] section
## Thermistor types                                                             [extruder] and [heater_bed] sections - See 'sensor types' list at end of file
## Extruder motor currents                                                      [extruder] section
## PID tune                                                                     [extruder] and [heater_bed] sections
## Fine tune E steps                                                            [extruder] section
## For more info  

[include macros/*.cfg]
#[include leds.cfg]                                                              check https://docs.vorondesign.com/build/startup/#v0

[mcu rpi]
serial: /tmp/klipper_host_mcu

[adxl345]
cs_pin: rpi:None

[resonance_tester]
accel_chip: adxl345
probe_points:
    65, 65, 20  # an example

[input_shaper]
shaper_freq_x: 73
shaper_type_x: ei
shaper_freq_y: 75
shaper_type_y: ei
    
[mcu]
#####################################################################
# Obtain definition by "ls -l /dev/serial/by-id/"
#####################################################################
serial: /dev/serial/by-id/usb-Klipper_stm32f103xe_37FFDB055257373337802051-if00
[printer]
kinematics: corexy
max_velocity: 550
max_accel: 9000
max_accel_to_decel: 9000
max_z_velocity: 45
max_z_accel: 150
square_corner_velocity: 10.0

#####################################################################
#      X/Y Stepper Settings
#####################################################################

[stepper_x]
step_pin: PB13
## Refer to https://docs.vorondesign.com/build/startup/#v0
dir_pin: PB12                                                       # Check motor direction in link above. If inverted, add a ! before PB12
enable_pin: !PB14
rotation_distance: 40
microsteps: 32
full_steps_per_rotation: 200                                        # Set to 400 for 0.9° degree stepper motor, 200 is for 1.8° stepper motors
endstop_pin: ^PC0 
position_endstop: 120
position_max: 120
homing_speed: 50                                                    # Can be increased after initial setup, Max 100
homing_retract_dist: 5
homing_positive_dir: true

[tmc2209 stepper_x]
uart_pin: PC11
tx_pin: PC10
uart_address: 0
interpolate: False
run_current: 0.5
sense_resistor: 0.110
stealthchop_threshold: 0                                            # Set to 999999 to turn stealthchop on, and 0 to use spreadcycle

[stepper_y]
step_pin: PB10
## Refer to https://docs.vorondesign.com/build/startup/#v0
dir_pin: PB2                                                        # Check motor direction in link above. If inverted, add a ! before PB2
enable_pin: !PB11
rotation_distance: 40
microsteps: 32
full_steps_per_rotation: 200                                        # Set to 400 for 0.9° degree stepper motor, 200 is for 1.8° stepper motors
endstop_pin: ^PC1
position_endstop: 120
position_max: 120
homing_speed: 50                                                    # Can be increased after initial setup, Max 100
homing_retract_dist: 7
homing_positive_dir: True

[tmc2209 stepper_y]
uart_pin: PC11
tx_pin: PC10
uart_address: 2
interpolate: False
run_current: 0.5
sense_resistor: 0.110
stealthchop_threshold: 0                                            # Set to 999999 to turn stealthchop on, and 0 to use spreadcycle

#####################################################################
#   Z Stepper Settings
#####################################################################

[stepper_z]
step_pin: PB0
dir_pin: !PC5                                                       # Remove the ! before PC5 if motor direction is inverted.
enable_pin: !PB1
rotation_distance: 40               #
gear_ratio: 80:20                   ##}  These 4 settings are for belted Z mod
full_steps_per_rotation: 200        ##}                                       
microsteps: 16                      #
endstop_pin: ^PC2
position_endstop: -0.10
position_max: 120
position_min: -1.5
homing_speed: 10
second_homing_speed: 3.0
homing_retract_dist: 3.0

[tmc2209 stepper_z]
uart_pin: PC11
tx_pin: PC10
uart_address: 1
interpolate: False
## For OMC (StepperOnline) 17LS13-0404E-200G 0.4A 
run_current: 0.7
## For LDO-42STH25-1004CL200E 1.0A
#run_current: 0.37
hold_current: 0.65
sense_resistor: 0.110
stealthchop_threshold: 0                                            # Set to 999999 to turn stealthchop on, and 0 to use spreadcycle

#####################################################################
#	Thermistor definitions
#####################################################################

[thermistor Trianglelab NTC100K B3950]
## values calibrated against a PT100 reference
temperature1: 25.0
resistance1: 103180.0
temperature2: 150.0
resistance2: 1366.2
temperature3: 250.0
resistance3: 168.6

#[temperature_sensor Chamber_Temp]
#sensor_type: ATC Semitec 104GT-2
#sensor_pin: PA7 # PA7 is MOSI on the SPI header. Has an on board 10K pullup to 3v3. Connect other leg of thermistor to ground
#pullup_resistor: 10000

[thermistor chamber]
#sensor_type: ATC Semitec 104GT-2
#sensor_pin: PA7
#min_temp: 0
#max_temp: 75
#gcode_id: chamber
#pullup_resistor: 6000
temperature1: 10
resistance1: 203455
temperature2: 40
resistance2: 34897
temperature3: 90
resistance3: 8504


#[thermistor chamber]
#temperature1: 10
#resistance1: 203455
#temperature2: 50
#resistance2: 34897
#temperature3: 90
#resistance3: 8504

#####################################################################
#   Extruder
#####################################################################

[extruder]
step_pin: PB3
dir_pin: PB4                                                        # Add ! if moving opposite direction
enable_pin: !PD2
#full_steps_per_rotation: 200                                       # Set to 200 for LDO 1.8° stepper motor, and set to 400 for OMC(StepperOnline) 0.9° stepper motor
rotation_distance: 21.79                                            # See calibrating rotation_distance on extruders doc
gear_ratio: 50:10                                                   # For Mini Afterburner
microsteps: 32
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PC8
sensor_type: Trianglelab NTC100K B3950                                 # Adjust for your hotend thermistor. See 'sensor types' list at end of file
sensor_pin: PA0
#control: pid                                                        # Do PID calibration after initial checks
#pid_Kp: 28.182
#28.182 1.978 100.397
#pid_Ki: 1.978
#pid_Kd: 100.397
min_temp: 0
max_temp: 270
min_extrude_temp: 170
max_extrude_only_distance: 150
max_extrude_cross_section: 0.8
pressure_advance: 0.0                                               # See tuning pressure advance doc
pressure_advance_smooth_time: 0.040

[tmc2209 extruder]
uart_pin: PC11
tx_pin: PC10
uart_address: 3
interpolate: False
## For OMC (StepperOnline) 14HR07-1004VRN 1A 0.9°
#run_current: 0.5	# for OMC 14HR07-1004VRN rated at 1A
## For LDO LDO 36STH17-1004AHG 1A 1.8° 
run_current: 0.3	# for LDO 36STH17-1004AHG
sense_resistor: 0.110
stealthchop_threshold: 0                                            # Set to 0 for spreadcycle, avoid using stealthchop on extruder

#####################################################################
#   Bed Heater
#####################################################################

[heater_bed]
heater_pin: PC9
sensor_type: NTC 100K MGB18-104F39050L32                            # For Keenovo, verify yours
sensor_pin: PC3
smooth_time: 3.0
#max_power: 0.6                                                     # Only needed for 100w pads
min_temp: 0
max_temp: 120
#control: pid                                                        # Do PID calibration after initial checks
#pid_kp: 68.453
#pid_ki: 2.749
#pid_kd: 426.122

#####################################################################
#	Fan Control
#####################################################################

[heater_fan hotend_fan]
pin: PC7
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0
#fan_speed: 1.0	                                                    # You can't PWM the delta fan unless using blue wire

[fan]
pin: PC6
max_power: 1.0
kick_start_time: 0.5                                              # Depending on your fan, you may need to increase this value if your fan will not start
off_below: 0.13
cycle_time: 0.020


[temperature_fan exhaust_fan]
pin: PA1
max_power: 1.0
kick_start_time: 0.5                                              # Depending on your fan, you may need to increase this value if your fan will not start
off_below: 0.13
cycle_time: 0.025
sensor_type: chamber
sensor_pin: PA7
control: watermark
max_delta:40
min_temp:0
max_temp:85

#####################################################################
#	Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 1800

[safe_z_home]
home_xy_position: 120,120
speed: 50.0
z_hop: 5

## To be used with BED_SCREWS_ADJUST
[bed_screws]
screw1: 60,5
screw1_name: front screw
screw2: 5,115
screw2_name: back left
screw3: 115,115
screw3_name: back right



[virtual_sdcard]
path: ~/gcode_files

[neopixel neo]
pin: PA8
chain_count: 17
color_order: GRB
initial_RED: 0.9
initial_GREEN: 0.9
initial_BLUE: 0.9


[display_status]



[pause_resume]


#####################################################################
#	Macros
#####################################################################


   
[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customize for your slicer of choice
gcode:
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-4.0 F3600                 ; retract filament
    G91                            ; relative positioning

    #   Get Boundaries
    {% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
    {% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
    {% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}

    #   Check end position to determine safe direction to move
    {% if printer.toolhead.position.x < (max_x - 20) %}
        {% set x_safe = 20.0 %}
    {% else %}
        {% set x_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.y < (max_y - 20) %}
        {% set y_safe = 20.0 %}
    {% else %}
        {% set y_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.z < (max_z - 2) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - printer.toolhead.position.z %}
    {% endif %}

    G0 Z{z_safe} F3600             ; move nozzle up
    G0 X{x_safe} Y{y_safe} F20000  ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    G90                            ; absolute positioning
    G0 X60 Y{max_y} F3600          ; park nozzle at rear
    SET_STATUS STATUS="ready"



[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %} 
  SET_STATUS STATUS="ready"
	

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}
  SET_STATUS STATUS="printing"


[gcode_macro LOAD_FILAMENT]
gcode:
   M83                            ; set extruder to relative
   G1 E30 F300                    ; load
   G1 E15 F150                    ; prime nozzle with filament
   M82                            ; set extruder to absolute
    
[gcode_macro UNLOAD_FILAMENT]
gcode:
   M83                            ; set extruder to relative
   G1 E10 F300                    ; extrude a little to soften tip
   G1 E-40 F1800                  ; retract some, but not too much or it will jam
   M82                            ; set extruder to absolute


[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE

  
  #
# Parametric PRIME LINE macro.
#
# Purges a set amounf of filament, then prints a nozzle priming line at the front of the bed.
# Calculates plastic flow and line size automatically based on nozzle diameter and bed size.
#
# Put this macro somewhere in your printer config and add PRIME_LINE as the last line in your PRINT_START macro.
#
# Most of the apects of how it does things are configurable, see the "params.SOMETHING" lines in the code below.
# Full list of accepted parameters and their default values below. All of them are optional and do not have to be specified if you don't want the values changed:
#
#  PRIME_LINE
#  PRIME_LINE XPAD=0 YPAD=0 LENGTH=150 PRINT_SPEED=30 TRAVEL_SPEED=200 PURGE=8 RETRACT=1 EXTRUSION_MULTIPLIER=1.25 PRINT_HANDLE=1 HANDLE_FAN=35
#
# Careful: prints close to bed. Make sure your z-offset is correctly set and your bed mesh loaded, otherwise
# you can damage your print surface.
#
# Version 1.2
#
[gcode_macro PRIME_LINE]
description: Print an easy to remove parametric extruder priming line with a built-in handle.
gcode:
    # settings
    {% set line = {
      'x_padding'      : params.XPAD|default(0)|float,  # left/right padding around the bed the line can't print into
      'y_padding'      : params.YPAD|default(0)|float,  # top/bottom padding around the bed the line can't print into
      'initial_purge'  : params.PURGE|default(8)|int,   # mm of filament to purge before printing. set to 0 to disable
      'retract_after'  : params.RETRACT|default(1)|int, # mm of filament to recract after printing. set to 0 to disable
      'length'         : params.LENGTH|default(150)|int,
      'print_speed'    : params.PRINT_SPEED|default(30)|int,
      'travel_speed'   : params.TRAVEL_SPEED|default(200)|int,
      'extr_multi'     : params.EXTRUSION_MULTIPLIER|default(1.25)|float,  # apply to prime lines
      'overlap_percent': 80, # how much prime lines overlap each other
    } %}
    {% set handle = {
      'do_print'    : params.PRINT_HANDLE|default(1)|int,  # set to 0 to disable printing the handle
      'fan_percent' : params.HANDLE_FAN|default(40)|int,   # without fan the handle is too small and melty to print upright
      'width'       : 5.0,
      'height'      : 5.0,
      'move_away'   : 60   # how much to move the toolhead away from the printed handle once done. set 0 to disable
    } %}

    # sanity check and computed variables
    {% set max_x, max_y, nozzle_diameter = printer.toolhead.axis_maximum.x|float, printer.toolhead.axis_maximum.y|float, printer.configfile.config['extruder'].nozzle_diameter|float %}
    {% set _ = line.update({'width': nozzle_diameter * 1.25, 'height': nozzle_diameter / 2, 'length': [line.length, max_x - 2 * line.x_padding - 2]|min}) %}
    {% set _ = line.update({'e_per_mm': line.extr_multi * (line.width * line.height) / (3.1415 * (1.75/2)**2), 'x_start': max_x / 2 - line.length / 2, 'y_start': line.y_padding + range(0,5)|random})  %}

    SAVE_GCODE_STATE NAME=STATE_PRIME_LINE

    M117 Prime Line
    G90 # absolute positioning
    G0 X{line.x_start} Y{line.y_start + (handle.width / 2)|int + 1} Z{line.height} F{line.travel_speed * 60} # move to starting position
    G91 # relative positioning
    G1 E{line.initial_purge} F{5 * 60} # extrude at ~12mm3/sec
    G0 F{line.print_speed * 60} # set print speed
    G1 X{line.length} E{line.length * line.e_per_mm} # print forward line
    G0 Y{line.width * line.overlap_percent / 100} # overlap forward line
    G1 X-{line.length / 2} E{(line.length / 2) * line.e_per_mm}  # print backward line for half the length

    # print a handle for easy removal
    {% if handle.do_print != 0 and handle.width != 0 and handle.height != 0 %}
      G0 X{line.length / 2 - handle.width} Y{handle.width / 2} F{line.travel_speed * 60} # move into position for printing handle
      G0 F{line.print_speed * 60} # set print speed
      {% set saved_fan_speed = (printer['fan'].speed * 256)|int %}
      M106 S{((handle.fan_percent / 100) * 256)|int} # set part fan to desired speed
      {% for _ in range((line.height * 1000)|int, (handle.height * 1000)|int, (line.height * 1000)|int) %} # loop however many cycles it takes to print required handle height
        G1 Y{loop.cycle(-1.0, 1.0) * handle.width} E{handle.width * line.e_per_mm} # handle layer
        G0 X-{line.width * 0.2} Z{line.height} # move up and shift the layer to make the handle sloping
      {% endfor %}
      M106 S{saved_fan_speed} # restore previous part fan speed
    {% endif %}
    
    G1 E-{line.retract_after} F{50 * 60} # retract ar 50mm/sec after printing
    G0 Y{handle.move_away} F{line.travel_speed * 60}
    M117

    RESTORE_GCODE_STATE NAME=STATE_PRIME_LINE

##   Sensor Types
##   "Trianglelab NTC100K B3950" (Beta 3950 used in LDO kits)
##   "EPCOS 100K B57560G104F"
##   "ATC Semitec 104GT-2"
##   "Generic 3950"
##   "Honeywell 100K 135-104LAG-J01"
##   "NTC 100K MGB18-104F39050L32" (Keenovo Heater Pad)
##   "AD595"
##   "PT100 INA826"
##   "PT1000"
##   "Umbilical PCB B3950"
##   For more information: https://www.klipper3d.org/Config_Reference.html#temperature_sensor

## Footnote about Beta 3950:
## https://github.com/Klipper3d/klipper/issues/4054
## https://github.com/Klipper3d/klipper/pull/4859

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 62.848
#*# pid_ki = 2.205
#*# pid_kd = 447.792
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 27.128
#*# pid_ki = 1.864
#*# pid_kd = 98.679
